name: Main

permissions:
  contents: write

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: Build & Release to Github
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: nightly
            use-cross: false

          - os: macos-14 # M1
            target: aarch64-apple-darwin
            use-cross: false
            toolchain: nightly

    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      # - name: Cache cargo & target directories
      #   uses: Swatinem/rust-cache@v2
      #   with:
      #     key: "v2"

      # - name: Install latest nightly for ${{ matrix.os }}
      #   uses: actions-rs/toolchain@v1
      #   with:
      #       toolchain: ${{ matrix.toolchain }}
      #       target: ${{ matrix.target }}
      #       override: false

      - name: Install cargo toolchain for ${{ matrix.os }}
        uses: dtolnay/rust-toolchain@master
        id: install_toolchain
        with:
          targets: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}

      - name: Some logs 
        run: echo "${{steps.install_toolchain.outputs.name}} ${{steps.install_toolchain.outputs.cachekey}}"

      - name: Install cross-rs
        id: cross_install
        shell: bash
        run: |
          cargo install cross --git https://github.com/cross-rs/cross
        if: ${{ matrix.use-cross }}

      - name: Cross Build for release with cross-rs
        id: cross_build
        shell: bash
        run: |
          cross build --release --target ${{ matrix.target }}
        if: ${{ matrix.use-cross }}

      - name: Build for release with cargo
        id: cargo_build
        shell: bash
        run: |
          cargo build --release --target ${{ matrix.target }}
        if: ${{ !matrix.use-cross }}

      # - name: Run tests
      #   shell: bash
      #   run: |
      #     cargo test --release
      #   if: ${{ !matrix.skip_tests }}

      - name: Package as an Archive
        id: packaging
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          tar -czvf ../../../${{ matrix.target }}.tar.gz $(ls -F . | grep "*" | sed "s/\*\$//")
          cd -

      - name: Upload Archive as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}.tag.gz
          path: ${{ matrix.target }}.tar.gz

      - name: Publish Artifact as Github Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: ${{ matrix.target }}.tar.gz
